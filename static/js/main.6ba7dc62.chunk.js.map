{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["buttonsObject","press","source","name","nameRegEx","i","length","decodeURI","match","DrumButtons","props","id","map","elem","className","customkey","onClick","setTextFunc","changetext","e","target","attributes","value","button","toUpperCase","document","getElementById","currentTime","play","src","Display","text","listenerAttached","App","useState","state","setState","useEffect","console","log","changeDisplayText","addEventListener","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6ba7dc62.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nconst buttonsObject = [\n  {\n    press: \"q\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Clap%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"w\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Clap%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"e\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20High.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"a\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20Mid.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"s\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20Low.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"d\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Cowbell.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"z\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Hihat%20Open.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"x\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Mid%20Tom.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"c\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%201.mp3\",\n    name: \"\",\n  },\n];\n\n//get raw file from github as source and set the name of each button\nlet nameRegEx = /.+\\/(.*)\\.mp3$/;\nfor (let i = 0; i < buttonsObject.length; i++) {\n  buttonsObject[i].name = decodeURI(buttonsObject[i].source).match(\n    nameRegEx\n  )[1];\n  buttonsObject[i].source = buttonsObject[i].source + \"?raw=true\";\n}\n\nconst handleKeyPressWrapper = (setTextFunc) => {\n  return (e) => {\n    try {\n      document.getElementById(e.key.toUpperCase()).currentTime = 0;\n      document.getElementById(e.key.toUpperCase()).play();\n      let name = \"Loading\";\n      for (let i = 0; i < buttonsObject.length; i++) {\n        if (buttonsObject[i].press === e.key) {\n          name = buttonsObject[i].name;\n          break;\n        }\n      }\n\n      setTextFunc(name);\n    } catch {}\n  };\n};\n\nconst dbHandleClickWrapper = (setTextFunc) => {\n  return (e) => {\n    const customkey = e.target.attributes.customkey.value;\n    const button = buttonsObject[customkey];\n    const id = button.press.toUpperCase();\n    document.getElementById(id).currentTime = 0;\n    document.getElementById(id).play();\n    setTextFunc(button.name);\n  };\n};\nconst DrumButtons = (props) => {\n  return (\n    <div id=\"db-wrapper\">\n      {buttonsObject.map((elem, i) => {\n        return (\n          <div className=\"drum-button\" key={i}>\n            <button\n              key={elem.press}\n              className=\"drum-pad\"\n              customkey={i}\n              onClick={dbHandleClickWrapper(props.changetext)}\n              id={elem.name}\n            >\n              <span className=\"front\">{elem.press.toUpperCase()}</span>\n              <audio\n                key={elem.press.toUpperCase()}\n                id={elem.press.toUpperCase()}\n                src={buttonsObject[i].source}\n                className=\"clip\"\n              ></audio>\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Display = (props) => {\n  return (\n    <div id=\"display\">\n      <div id=\"display-text\">{props.text}</div>\n    </div>\n  );\n};\n\nlet listenerAttached = false;\nfunction App() {\n  const [state, setState] = useState({ text: \"Press a button\" });\n  useEffect(() => {\n    console.log(\"useEffect\", state);\n  });\n  const changeDisplayText = (text) => {\n    console.log(\"state change function called\", text);\n    setState({ text: text });\n    console.log(\"new state\", state);\n  };\n  if (!listenerAttached) {\n    document.addEventListener(\n      \"keydown\",\n      handleKeyPressWrapper(changeDisplayText)\n    );\n    listenerAttached = true;\n  }\n  return (\n    <div className=\"App\" id=\"drum-machine\">\n      <Display text={state.text} />\n      <DrumButtons changetext={changeDisplayText} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}