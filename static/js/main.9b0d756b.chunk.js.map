{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["handleKeyPressWrapper","setTextFunc","buttonsarr","e","document","getElementById","key","toUpperCase","parentElement","children","style","backgroundColor","currentTime","playPromise","play","undefined","then","catch","error","console","log","name","i","length","press","handleKeyUp","Dropdown","props","rowstyle","display","gridColumn","justifyContent","alignItems","row1","row2","useEffect","keyboardswitch","minimizedswitch","keyboard","checked","minimized","motion","div","id","gridGap","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","justifySelf","alignSelf","width","borderRadius","variants","hidden","opacity","x","open","transition","type","exit","initial","animate","gridArea","className","onClick","setappstate","prev","copy","Options","useState","state","setState","Fragment","zIndex","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","padding","height","AnimatePresence","scale","Display","text","DrumButtons","drumButtonsVariants","y","visible","duration","map","elem","customkey","changetext","target","attributes","value","button","src","source","preload","App","changeDisplayText","keys","indexOf","yIndex","zObj","lastButtonsarr","React","useRef","current","addEventListener","removeEventListener","delay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","buttonsArr","nameRegEx","decodeURI","match","ReactDOM","render","StrictMode"],"mappings":"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,EAAOL,GACPM,EAAQN,OCDRO,EAAa,CACjB,CACEjG,MAAO,IACP0E,OACE,kFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,kFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,sFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,qFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,qFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,iFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,sFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,mFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,yFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,yFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,yFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,8EACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,mFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,mFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,mFACF7E,KAAM,IAER,CACEG,MAAO,IACP0E,OACE,mFACF7E,KAAM,KAKV,IAEE,IADA,IAAIqG,EAAY,iBACPpG,EAAI,EAAGA,EAAImG,EAAWlG,OAAQD,IACrCmG,EAAWnG,GAAGD,KAAOsG,UAAUF,EAAWnG,GAAG4E,QAAQ0B,MAAMF,GAAW,GACtED,EAAWnG,GAAG4E,OAASuB,EAAWnG,GAAG4E,OAAS,YAEhD,MAAO/F,GACPgB,QAAQD,MAAM,wCAAyCf,GAGzD0H,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK7H,WAAYuH,MAEnBrH,SAASC,eAAe,SAM1B4G,M","file":"static/js/main.9b0d756b.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nconst handleKeyPressWrapper = (setTextFunc, buttonsarr) => {\n  return (e) => {\n    try {\n      document.getElementById(\n        e.key.toUpperCase()\n      ).parentElement.children[0].style.backgroundColor = \"#e74c3c\";\n      document.getElementById(e.key.toUpperCase()).currentTime = 0;\n      let playPromise = document.getElementById(e.key.toUpperCase()).play();\n      if (playPromise !== undefined) {\n        playPromise\n          .then(() => {})\n          .catch((error) => {\n            console.log(\"error\", error);\n          });\n      }\n      let name = \"Loading\";\n      for (let i = 0; i < buttonsarr.length; i++) {\n        if (buttonsarr[i].press === e.key) {\n          name = buttonsarr[i].name;\n          break;\n        }\n      }\n      setTextFunc(name);\n    } catch {}\n  };\n};\n\nconst handleKeyUp = (e) => {\n  // for wrong keys try -> catch\n  try {\n    document.getElementById(\n      e.key.toUpperCase()\n    ).parentElement.children[0].style.backgroundColor = \"#0be881\";\n  } catch {}\n};\n\nconst dbHandleClickWrapper = (setTextFunc, buttonsarr) => {\n  return (e) => {\n    const customkey = e.target.attributes.customkey.value;\n    const button = buttonsarr[customkey];\n    const id = button.press.toUpperCase();\n    document.getElementById(id).currentTime = 0;\n    document.getElementById(id).play();\n    setTextFunc(button.name);\n  };\n};\n\nconst Dropdown = (props) => {\n  let dropdownstyle = {\n    display: \"grid\",\n    gridGap: \"10px\",\n    gridTemplateRows: \"70px 1fr 1fr 1fr\",\n    gridTemplateColumns: \"1fr 70px\",\n    gridTemplateAreas: '\"header .\" \"row1 row1\" \"row2 row2\" \"row3 row3\"',\n    justifySelf: \"end\",\n    alignSelf: \"start\",\n    width: \"80%\",\n    backgroundColor: \"grey\",\n    borderRadius: \"5px\",\n  };\n\n  let rowstyle = {\n    display: \"flex\",\n    gridColumn: \"1 / 3\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  };\n\n  let row1 = { ...rowstyle };\n  row1[\"gridArea\"] = \"row1\";\n  let row2 = { ...rowstyle };\n  row2[\"gridArea\"] = \"row2\";\n  let row3 = { ...rowstyle };\n  row3[\"gridArea\"] = \"row3\";\n  let titlestyle = {\n    gridArea: \"header\",\n    justifySelf: \"center\",\n    alignSelf: \"center\",\n  };\n\n  const keyboardToggle = () => {\n    props.setappstate((prev) => {\n      let copy = { ...prev };\n      if (copy.keyboard === \"qwerty\") {\n        copy.keyboard = \"qwertz\";\n      } else {\n        copy.keyboard = \"qwerty\";\n      }\n      return copy;\n    });\n  };\n\n  const minimizedToggle = () => {\n    props.setappstate((prev) => {\n      let copy = { ...prev };\n      copy.minimized = !copy.minimized;\n      return copy;\n    });\n  };\n\n  useEffect(() => {\n    let keyboardswitch =\n      document.getElementById(\"keyboardswitch\").children[1].children[0];\n    let minimizedswitch =\n      document.getElementById(\"minimizedswitch\").children[1].children[0];\n\n    if (props.keyboard === \"qwertz\") {\n      keyboardswitch.checked = true;\n    }\n    if (props.minimized === false) {\n      minimizedswitch.checked = true;\n    }\n  }, [props.keyboard, props.minimized]);\n\n  const dropdownVariants = {\n    hidden: { opacity: 0, x: \"30px\" },\n    open: {\n      opacity: 1,\n      x: 0,\n      transition: { type: \"ease-in-out\" },\n    },\n    exit: {\n      opacity: 0,\n      x: \"30px\",\n      transition: { type: \"ease-in-out\" },\n    },\n  };\n\n  return (\n    <motion.div\n      id=\"optionsdropdown\"\n      style={dropdownstyle}\n      variants={dropdownVariants}\n      initial=\"hidden\"\n      animate=\"open\"\n      exit=\"exit\"\n    >\n      <h1 style={titlestyle}>Options</h1>\n      <div id=\"keyboardswitch\" className=\"switch-row\" style={row1}>\n        <div>QWERTY</div>\n        <label className=\"switch\">\n          <input type=\"checkbox\" onClick={keyboardToggle}></input>\n          <span className=\"slider round\"></span>\n        </label>\n        <div>QWERTZ</div>\n      </div>\n      <div id=\"minimizedswitch\" className=\"switch-row\" style={row2}>\n        <div>Minimized</div>\n        <label className=\"switch\">\n          <input type=\"checkbox\" onClick={minimizedToggle}></input>\n          <span className=\"slider round\"></span>\n        </label>\n        <div>Maximised</div>\n      </div>\n      {/* <div id=\"keyboardswitch\" className=\"switch-row\" style={row3}>\n        <div>QWERTY</div>\n        <label className=\"switch\">\n          <input type=\"checkbox\"></input>\n          <span className=\"slider round\"></span>\n        </label>\n        <div>QWERTZ</div>\n      </div> */}\n    </motion.div>\n  );\n};\n\nconst Options = (props) => {\n  const [state, setState] = useState(false); //state determines whether its clicked\n  const handleClick = () => {\n    setState(!state);\n  };\n\n  let optionsstyle = {\n    zIndex: \"1\",\n    backgroundImage: \"url('/FCC-Drum-Machine/gear-white.png')\",\n    backgroundSize: \"90% auto\",\n    backgroundPosition: \"50% 50%\",\n    backgroundRepeat: \"no-repeat\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    height: \"50px\",\n    width: \"50px\",\n  };\n\n  return (\n    <React.Fragment>\n      <div id=\"options\" style={optionsstyle} onClick={handleClick}></div>\n      <AnimatePresence>\n        {state && (\n          <Dropdown\n            minimized={props.minimized}\n            setappstate={props.setappstate}\n            keyboard={props.keyboard}\n            animate={{ scale: 1.5 }}\n          />\n        )}\n      </AnimatePresence>\n    </React.Fragment>\n  );\n};\n\nconst Display = (props) => {\n  return (\n    <div id=\"display\">\n      <div id=\"display-text\">{props.text}</div>\n    </div>\n  );\n};\n\nconst DrumButtons = (props) => {\n  const drumButtonsVariants = {\n    hidden: {\n      y: \"140vh\",\n    },\n    visible: {\n      y: 0,\n      transition: { type: \"tween\", duration: 1 },\n    },\n    exit: {\n      y: \"140vh\",\n      transition: { type: \"tween\", duration: 1 },\n    },\n  };\n\n  return (\n    <div id=\"db-wrapper\">\n      <AnimatePresence>\n        {props.buttonsarr.map((elem, i) => {\n          return (\n            <motion.div\n              className=\"drum-button\"\n              key={i}\n              variants={drumButtonsVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n            >\n              <button\n                key={elem.press}\n                className=\"drum-pad\"\n                customkey={i}\n                onClick={dbHandleClickWrapper(\n                  props.changetext,\n                  props.buttonsarr\n                )}\n                id={elem.name}\n              >\n                <span className=\"front\">{elem.press.toUpperCase()}</span>\n                <audio\n                  key={elem.press.toUpperCase()}\n                  id={elem.press.toUpperCase()}\n                  src={props.buttonsarr[i].source}\n                  preload=\"auto\"\n                  className=\"clip\"\n                ></audio>\n              </button>\n            </motion.div>\n          );\n        })}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nfunction App(props) {\n  const [state, setState] = useState({\n    text: \"Press a button\",\n    minimized: true,\n    keyboard: \"qwerty\",\n  });\n\n  const changeDisplayText = (text) => {\n    setState((prev) => {\n      let copy = { ...prev };\n      copy.text = text;\n      return copy;\n    });\n  };\n\n  let buttonsarr = [];\n  if (state.minimized) {\n    let keys = [\"q\", \"w\", \"e\", \"a\", \"s\", \"d\", \"z\", \"x\", \"c\"];\n    if (state.keyboard !== \"qwerty\") {\n      keys[keys.indexOf(\"z\")] = \"y\";\n    }\n    for (let i = 0; i < props.buttonsarr.length; i++) {\n      if (keys.indexOf(props.buttonsarr[i].press) !== -1) {\n        buttonsarr[keys.indexOf(props.buttonsarr[i].press)] =\n          props.buttonsarr[i];\n      }\n    }\n  } else {\n    buttonsarr = [...props.buttonsarr];\n\n    if (state.keyboard === \"qwerty\") {\n      let yIndex = -1;\n      let zIndex = -1;\n      for (\n        let i = 0;\n        i < buttonsarr.length && (yIndex === -1 || zIndex === -1);\n        i++\n      ) {\n        if (buttonsarr[i].press === \"y\") {\n          yIndex = i;\n          continue;\n        } else if (buttonsarr[i].press === \"z\") {\n          zIndex = i;\n          continue;\n        }\n      }\n      let zObj = buttonsarr[zIndex];\n      buttonsarr[zIndex] = buttonsarr[yIndex];\n      buttonsarr[yIndex] = zObj;\n    }\n  }\n\n  let lastButtonsarr = React.useRef([]);\n  useEffect(() => {\n    lastButtonsarr.current = buttonsarr;\n    // console.log(\"created\", lastButtonsarr.current);\n    document.addEventListener(\n      \"keydown\",\n      handleKeyPressWrapper(changeDisplayText, lastButtonsarr.current)\n    );\n    document.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      // console.log(\"removed\", lastButtonsarr.current);\n      document.removeEventListener(\n        \"keydown\",\n        handleKeyPressWrapper(changeDisplayText, lastButtonsarr.current)\n      );\n      document.removeEventListener(\"keyup\", handleKeyUp);\n    }; // eslint-disable-next-line\n  }, [state.minimized, state.keyboard]);\n\n  return (\n    <motion.div\n      className=\"App\"\n      id=\"drum-machine\"\n      initial={{ scale: 0.7 }}\n      animate={{ scale: 1 }}\n      transition={{ delay: 0.2, duration: 0.5 }}\n    >\n      <Options\n        minimized={state.minimized}\n        keyboard={state.keyboard}\n        setappstate={setState}\n      />\n      <Display text={state.text} />\n      <DrumButtons changetext={changeDisplayText} buttonsarr={buttonsarr} />\n    </motion.div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst buttonsArr = [\n  {\n    press: \"q\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Clap%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"w\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Clap%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"e\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20High.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"r\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20Mid.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"t\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20Low.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"z\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Cowbell.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"a\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Hihat%20Open.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"s\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Mid%20Tom.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"d\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"f\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"g\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%203.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"y\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Woop.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"x\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"c\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"v\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%203.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"b\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%204.mp3\",\n    name: \"\",\n  },\n];\n\n//get raw file from github as source and set the name of each button\ntry {\n  let nameRegEx = /.+\\/(.*)\\.mp3$/;\n  for (let i = 0; i < buttonsArr.length; i++) {\n    buttonsArr[i].name = decodeURI(buttonsArr[i].source).match(nameRegEx)[1];\n    buttonsArr[i].source = buttonsArr[i].source + \"?raw=true\";\n  }\n} catch (e) {\n  console.error(\"Error in buttonsArr, full message: \\n\", e);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App buttonsarr={buttonsArr} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}