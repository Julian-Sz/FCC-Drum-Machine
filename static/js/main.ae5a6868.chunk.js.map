{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["handleKeyPressWrapper","setTextFunc","buttonsarr","e","document","getElementById","key","toUpperCase","currentTime","playPromise","play","undefined","then","catch","error","console","log","name","i","length","press","Dropdown","props","rowstyle","display","gridColumn","justifyContent","alignItems","row1","row2","useEffect","keyboardswitch","children","minimizedswitch","keyboard","checked","minimized","id","style","gridGap","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","justifySelf","alignSelf","width","backgroundColor","borderRadius","gridArea","className","type","onClick","setappstate","prev","copy","Options","useState","state","setState","handleClick","optionsstyle","zIndex","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","padding","height","Fragment","Display","text","DrumButtons","map","elem","customkey","changetext","target","attributes","value","button","src","source","preload","App","changeDisplayText","keys","indexOf","yIndex","zObj","lastButtonsarr","React","useRef","current","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","buttonsArr","nameRegEx","decodeURI","match","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ae5a6868.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nconst handleKeyPressWrapper = (setTextFunc, buttonsarr) => {\n  return (e) => {\n    try {\n      document.getElementById(e.key.toUpperCase()).currentTime = 0;\n      let playPromise = document.getElementById(e.key.toUpperCase()).play();\n      if (playPromise !== undefined) {\n        playPromise\n          .then(() => {})\n          .catch((error) => {\n            console.log(\"error\", error);\n          });\n      }\n      let name = \"Loading\";\n      for (let i = 0; i < buttonsarr.length; i++) {\n        if (buttonsarr[i].press === e.key) {\n          name = buttonsarr[i].name;\n          break;\n        }\n      }\n      setTextFunc(name);\n    } catch {}\n  };\n};\n\nconst dbHandleClickWrapper = (setTextFunc, buttonsarr) => {\n  return (e) => {\n    const customkey = e.target.attributes.customkey.value;\n    const button = buttonsarr[customkey];\n    const id = button.press.toUpperCase();\n    document.getElementById(id).currentTime = 0;\n    document.getElementById(id).play();\n    setTextFunc(button.name);\n  };\n};\n\nconst Dropdown = (props) => {\n  let dropdownstyle = {\n    display: \"grid\",\n    gridGap: \"10px\",\n    gridTemplateRows: \"70px 1fr 1fr 1fr\",\n    gridTemplateColumns: \"1fr 70px\",\n    gridTemplateAreas: '\"header .\" \"row1 row1\" \"row2 row2\" \"row3 row3\"',\n    justifySelf: \"end\",\n    alignSelf: \"start\",\n    width: \"80%\",\n    backgroundColor: \"grey\",\n    borderRadius: \"5px\",\n  };\n\n  let rowstyle = {\n    display: \"flex\",\n    gridColumn: \"1 / 3\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  };\n\n  let row1 = { ...rowstyle };\n  row1[\"gridArea\"] = \"row1\";\n  let row2 = { ...rowstyle };\n  row2[\"gridArea\"] = \"row2\";\n  let row3 = { ...rowstyle };\n  row3[\"gridArea\"] = \"row3\";\n  let titlestyle = {\n    gridArea: \"header\",\n    justifySelf: \"center\",\n    alignSelf: \"center\",\n  };\n\n  const keyboardToggle = () => {\n    props.setappstate((prev) => {\n      let copy = { ...prev };\n      if (copy.keyboard === \"qwerty\") {\n        copy.keyboard = \"qwertz\";\n      } else {\n        copy.keyboard = \"qwerty\";\n      }\n      return copy;\n    });\n  };\n\n  const minimizedToggle = () => {\n    props.setappstate((prev) => {\n      let copy = { ...prev };\n      copy.minimized = !copy.minimized;\n      return copy;\n    });\n  };\n\n  useEffect(() => {\n    let keyboardswitch =\n      document.getElementById(\"keyboardswitch\").children[1].children[0];\n    let minimizedswitch =\n      document.getElementById(\"minimizedswitch\").children[1].children[0];\n\n    if (props.keyboard === \"qwertz\") {\n      keyboardswitch.checked = true;\n    }\n    if (props.minimized === false) {\n      minimizedswitch.checked = true;\n    }\n  }, [props.keyboard, props.minimized]);\n\n  return (\n    <div id=\"optionsdropdown\" style={dropdownstyle}>\n      <h1 style={titlestyle}>Options</h1>\n      <div id=\"keyboardswitch\" className=\"switch-row\" style={row1}>\n        <div>QWERTY</div>\n        <label className=\"switch\">\n          <input type=\"checkbox\" onClick={keyboardToggle}></input>\n          <span className=\"slider round\"></span>\n        </label>\n        <div>QWERTZ</div>\n      </div>\n      <div id=\"minimizedswitch\" className=\"switch-row\" style={row2}>\n        <div>Minimized</div>\n        <label className=\"switch\">\n          <input type=\"checkbox\" onClick={minimizedToggle}></input>\n          <span className=\"slider round\"></span>\n        </label>\n        <div>Maximised</div>\n      </div>\n      {/* <div id=\"keyboardswitch\" className=\"switch-row\" style={row3}>\n        <div>QWERTY</div>\n        <label className=\"switch\">\n          <input type=\"checkbox\"></input>\n          <span className=\"slider round\"></span>\n        </label>\n        <div>QWERTZ</div>\n      </div> */}\n    </div>\n  );\n};\n\nconst Options = (props) => {\n  const [state, setState] = useState(false); //state determines whether its clicked\n  const handleClick = () => {\n    setState(!state);\n  };\n\n  let optionsstyle = {\n    zIndex: \"1\",\n    backgroundImage: \"url('/FCC-Drum-Machine/gear-white.png')\",\n    backgroundSize: \"90% auto\",\n    backgroundPosition: \"50% 50%\",\n    backgroundRepeat: \"no-repeat\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    height: \"50px\",\n    width: \"50px\",\n  };\n  if (state) {\n    return (\n      <React.Fragment>\n        <div id=\"options\" style={optionsstyle} onClick={handleClick}></div>\n        <Dropdown\n          minimized={props.minimized}\n          setappstate={props.setappstate}\n          keyboard={props.keyboard}\n        />\n      </React.Fragment>\n    );\n  } else {\n    return <div id=\"options\" style={optionsstyle} onClick={handleClick}></div>;\n  }\n};\n\nconst Display = (props) => {\n  return (\n    <div id=\"display\">\n      <div id=\"display-text\">{props.text}</div>\n    </div>\n  );\n};\n\nconst DrumButtons = (props) => {\n  return (\n    <div id=\"db-wrapper\">\n      {props.buttonsarr.map((elem, i) => {\n        return (\n          <div className=\"drum-button\" key={i}>\n            <button\n              key={elem.press}\n              className=\"drum-pad\"\n              customkey={i}\n              onClick={dbHandleClickWrapper(props.changetext, props.buttonsarr)}\n              id={elem.name}\n            >\n              <span className=\"front\">{elem.press.toUpperCase()}</span>\n              <audio\n                key={elem.press.toUpperCase()}\n                id={elem.press.toUpperCase()}\n                src={props.buttonsarr[i].source}\n                preload=\"auto\"\n                className=\"clip\"\n              ></audio>\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nfunction App(props) {\n  const [state, setState] = useState({\n    text: \"Press a button\",\n    minimized: true,\n    keyboard: \"qwerty\",\n  });\n\n  const changeDisplayText = (text) => {\n    setState((prev) => {\n      let copy = { ...prev };\n      copy.text = text;\n      return copy;\n    });\n  };\n\n  let buttonsarr = [];\n  if (state.minimized) {\n    let keys = [\"q\", \"w\", \"e\", \"a\", \"s\", \"d\", \"z\", \"x\", \"c\"];\n    if (state.keyboard !== \"qwerty\") {\n      keys[keys.indexOf(\"z\")] = \"y\";\n    }\n    for (let i = 0; i < props.buttonsarr.length; i++) {\n      if (keys.indexOf(props.buttonsarr[i].press) !== -1) {\n        buttonsarr[keys.indexOf(props.buttonsarr[i].press)] =\n          props.buttonsarr[i];\n      }\n    }\n    console.log(\"final buttons\", buttonsarr);\n  } else {\n    buttonsarr = [...props.buttonsarr];\n\n    if (state.keyboard === \"qwerty\") {\n      let yIndex = -1;\n      let zIndex = -1;\n      for (\n        let i = 0;\n        i < buttonsarr.length && (yIndex === -1 || zIndex === -1);\n        i++\n      ) {\n        if (buttonsarr[i].press === \"y\") {\n          yIndex = i;\n          continue;\n        } else if (buttonsarr[i].press === \"z\") {\n          zIndex = i;\n          continue;\n        }\n      }\n      console.log(\"Indexes y and z\", yIndex, zIndex);\n      let zObj = buttonsarr[zIndex];\n      console.log(\"buttonsArr[zIndex]\", buttonsarr[zIndex]);\n      console.log(\"buttonsArr[yIndex]\", buttonsarr[yIndex]);\n      console.log(\"zObj\", zObj);\n      buttonsarr[zIndex] = buttonsarr[yIndex];\n      buttonsarr[yIndex] = zObj;\n      console.log(\"buttonsarr[yIndex]\", buttonsarr[yIndex], \"yIndex\", yIndex);\n      console.log(\"final buttonsarr\", buttonsarr);\n    }\n\n    console.log(\"else triggered\", buttonsarr);\n  }\n\n  let lastButtonsarr = React.useRef([]);\n  useEffect(() => {\n    lastButtonsarr.current = buttonsarr;\n    // console.log(\"created\", lastButtonsarr.current);\n    document.addEventListener(\n      \"keydown\",\n      handleKeyPressWrapper(changeDisplayText, lastButtonsarr.current)\n    );\n    return () => {\n      // console.log(\"removed\", lastButtonsarr.current);\n      document.removeEventListener(\n        \"keydown\",\n        handleKeyPressWrapper(changeDisplayText, lastButtonsarr.current)\n      );\n    }; // eslint-disable-next-line\n  }, [state.minimized, state.keyboard]);\n\n  return (\n    <div className=\"App\" id=\"drum-machine\">\n      <Options\n        minimized={state.minimized}\n        keyboard={state.keyboard}\n        setappstate={setState}\n      />\n      <Display text={state.text} />\n      <DrumButtons changetext={changeDisplayText} buttonsarr={buttonsarr} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst buttonsArr = [\n  {\n    press: \"q\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Clap%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"w\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Clap%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"e\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20High.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"r\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20Mid.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"t\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20Low.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"z\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Cowbell.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"a\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Hihat%20Open.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"s\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Mid%20Tom.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"d\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"f\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"g\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%203.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"y\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Woop.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"x\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"c\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"v\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%203.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"b\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%204.mp3\",\n    name: \"\",\n  },\n];\n\n//get raw file from github as source and set the name of each button\ntry {\n  let nameRegEx = /.+\\/(.*)\\.mp3$/;\n  for (let i = 0; i < buttonsArr.length; i++) {\n    buttonsArr[i].name = decodeURI(buttonsArr[i].source).match(nameRegEx)[1];\n    buttonsArr[i].source = buttonsArr[i].source + \"?raw=true\";\n  }\n} catch (e) {\n  console.error(\"Error in buttonsArr, full message: \\n\", e);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App buttonsarr={buttonsArr} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}