{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["buttonsObject","press","source","name","i","length","DrumButtons","props","id","map","elem","className","customkey","onClick","setTextFunc","changetext","e","console","log","target","attributes","value","button","toUpperCase","document","getElementById","currentTime","play","src","Display","text","attached","App","useState","state","setState","changedisplaytext","addEventListener","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ea9255be.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\n// import Laser from \"./sounds/Laser-1.wav\";\n\nconst buttonsObject = [\n  {\n    press: \"q\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/d5474a6ef10ea81ce18057596794cd2777dd9c44/src/sounds/Bass%20Chord%201.wav\",\n    name: \"Bass Chord 1\",\n  },\n  {\n    press: \"w\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Beep%201.wav\",\n    name: \"Beep 1\",\n  },\n  {\n    press: \"e\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Cymbal%201.wav\",\n    name: \"Cymbal 1\",\n  },\n  {\n    press: \"a\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Drum%201.wav\",\n    name: \"Drum 1\",\n  },\n  {\n    press: \"s\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/E-Guitar%201.wav\",\n    name: \"E-Guitar Chord 1\",\n  },\n  {\n    press: \"d\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Guitar%20Chord.wav\",\n    name: \"Guitar Chord 1\",\n  },\n  {\n    press: \"z\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Guitar%20Chord%202.wav\",\n    name: \"Guitar Chord 2\",\n  },\n  {\n    press: \"x\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Laser-1.wav\",\n    name: \"Laser 1\",\n  },\n  {\n    press: \"c\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%20Drum%201.wav\",\n    name: \"Snare Drum 1\",\n  },\n];\n\n//get raw file from github as source\nfor (let i = 0; i < buttonsObject.length; i++) {\n  buttonsObject[i].source = buttonsObject[i].source + \"?raw=true\";\n}\n\nconst handleKeyPressWrapper = (setTextFunc) => {\n  return (e) => {\n    console.log(\"key\", e.key);\n\n    try {\n      document.getElementById(e.key.toUpperCase()).currentTime = 0;\n      document.getElementById(e.key.toUpperCase()).play();\n      let name = \"Loading\";\n      for (let i = 0; i < buttonsObject.length; i++) {\n        if (buttonsObject[i].press === e.key) {\n          name = buttonsObject[i].name;\n          break;\n        }\n      }\n      setTextFunc(name);\n    } catch {}\n  };\n};\n\nconst dbHandleClickWrapper = (setTextFunc) => {\n  return (e) => {\n    console.log(\"event.target.attributes.customkey\", e.target);\n    const customkey = e.target.attributes.customkey.value;\n    console.log(\"cust\", customkey.value);\n    const button = buttonsObject[customkey];\n    const id = button.press.toUpperCase();\n    console.log(id);\n    console.log(\"element\", document.getElementById(id));\n    document.getElementById(id).currentTime = 0;\n    document.getElementById(id).play();\n    setTextFunc(button.name);\n  };\n};\nconst DrumButtons = (props) => {\n  return (\n    <div id=\"db-wrapper\">\n      {buttonsObject.map((elem, i) => {\n        return (\n          <div className=\"drum-button\" key={i}>\n            <button\n              key={elem.press}\n              className=\"drum-pad\"\n              customkey={i}\n              onClick={dbHandleClickWrapper(props.changetext)}\n              id={elem.name}\n            >\n              <span className=\"front\">{elem.press.toUpperCase()}</span>\n              <audio\n                key={elem.press.toUpperCase()}\n                id={elem.press.toUpperCase()}\n                src={buttonsObject[i].source}\n                className=\"clip\"\n              ></audio>\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Display = (props) => {\n  return (\n    <div id=\"display\">\n      <div id=\"display-text\">{props.text}</div>\n    </div>\n  );\n};\n\nlet attached = false;\nfunction App() {\n  const [state, setState] = useState({ text: \"Display\" });\n  var changedisplaytext = (text) => {\n    setState({ text: text });\n  };\n  if (!attached) {\n    document.addEventListener(\n      \"keydown\",\n      handleKeyPressWrapper(changedisplaytext)\n    );\n    attached = true;\n  }\n  return (\n    <div className=\"App\" id=\"drum-machine\">\n      <Display text={state.text} />\n      <DrumButtons changetext={changedisplaytext} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}