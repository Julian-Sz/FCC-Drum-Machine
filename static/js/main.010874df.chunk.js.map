{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["handleKeyPressWrapper","setTextFunc","buttonsarr","e","document","getElementById","key","toUpperCase","parentElement","children","style","backgroundColor","currentTime","playPromise","play","undefined","then","catch","error","console","log","name","i","length","press","handleKeyUp","Dropdown","props","rowstyle","display","justifySelf","padding","gridColumn","justifyContent","alignItems","borderRadius","minWidth","boxShadow","row1","row2","useEffect","keyboardswitch","minimizedswitch","keyboard","checked","minimized","rowVariants","visible","hover","motion","div","id","gridGap","zIndex","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","alignSelf","color","variants","hidden","opacity","x","open","transition","type","exit","initial","animate","gridArea","className","whileHover","onClick","setappstate","prev","copy","Options","useState","state","setState","Fragment","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","height","width","AnimatePresence","scale","Display","text","DrumButtons","drumButtonsVariants","y","duration","dbWrapperStyle","window","innerWidth","map","elem","customkey","changetext","target","attributes","value","button","src","source","preload","App","changeDisplayText","keys","indexOf","yIndex","zObj","lastButtonsarr","React","useRef","current","addEventListener","removeEventListener","delay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","buttonsArr","nameRegEx","decodeURI","match","ReactDOM","render","StrictMode"],"mappings":"wQAIMA,EAAwB,SAACC,EAAaC,GAC1C,OAAO,SAACC,GACN,IACEC,SAASC,eACPF,EAAEG,IAAIC,eACNC,cAAcC,SAAS,GAAGC,MAAMC,gBAAkB,UACpDP,SAASC,eAAeF,EAAEG,IAAIC,eAAeK,YAAc,EAC3D,IAAIC,EAAcT,SAASC,eAAeF,EAAEG,IAAIC,eAAeO,YAC3CC,IAAhBF,GACFA,EACGG,MAAK,eACLC,OAAM,SAACC,GACNC,QAAQC,IAAI,QAASF,MAI3B,IADA,IAAIG,EAAO,UACFC,EAAI,EAAGA,EAAIpB,EAAWqB,OAAQD,IACrC,GAAIpB,EAAWoB,GAAGE,QAAUrB,EAAEG,IAAK,CACjCe,EAAOnB,EAAWoB,GAAGD,KACrB,MAGJpB,EAAYoB,GACZ,aAIAI,EAAc,SAACtB,GAEnB,IACEC,SAASC,eACPF,EAAEG,IAAIC,eACNC,cAAcC,SAAS,GAAGC,MAAMC,gBAAkB,UACpD,YAcEe,EAAW,SAACC,GAChB,IAeIC,EAAW,CACbC,QAAS,OACTC,YAAa,SACbC,QAAS,MACTC,WAAY,QACZC,eAAgB,eAChBC,WAAY,SACZC,aAAc,OACdC,SAAU,OACVC,UAAW,0DAGTC,EAAI,eAAQV,GAChBU,EAAI,SAAe,OACnB,IAAIC,EAAI,eAAQX,GAChBW,EAAI,SAAe,OA2BnBC,qBAAU,WACR,IAAIC,EACFrC,SAASC,eAAe,kBAAkBI,SAAS,GAAGA,SAAS,GAC7DiC,EACFtC,SAASC,eAAe,mBAAmBI,SAAS,GAAGA,SAAS,GAE3C,WAAnBkB,EAAMgB,WACRF,EAAeG,SAAU,IAEH,IAApBjB,EAAMkB,YACRH,EAAgBE,SAAU,KAE3B,CAACjB,EAAMgB,SAAUhB,EAAMkB,YAE1B,IAcMC,EAAc,CAClBC,QAAS,CAAEpC,gBAAiB,WAC5BqC,MAAO,CAAErC,gBAAiB,YAG5B,OACE,eAACsC,EAAA,EAAOC,IAAR,CACEC,GAAG,kBACHzC,MA7FgB,CAClBmB,QAAS,OACTuB,QAAS,OACTC,OAAQ,EACRC,iBAAkB,eAClBC,oBAAqB,WACrBC,kBAAmB,qCACnBzB,QAAS,mBACTD,YAAa,MACb2B,UAAW,QACX9C,gBAAiB,UACjBwB,aAAc,MACduB,MAAO,WAkFLC,SAvBqB,CACvBC,OAAQ,CAAEC,QAAS,EAAGC,EAAG,QACzBC,KAAM,CACJF,QAAS,EACTC,EAAG,EACHE,WAAY,CAAEC,KAAM,gBAEtBC,KAAM,CACJL,QAAS,EACTC,EAAG,OACHE,WAAY,CAAEC,KAAM,iBAcpBE,QAAQ,SACRC,QAAQ,OACRF,KAAK,OANP,UAQE,oBAAIxD,MApES,CACf2D,SAAU,SACVvC,YAAa,SACb2B,UAAW,UAiET,qBACA,eAACR,EAAA,EAAOC,IAAR,CACEC,GAAG,iBACHmB,UAAU,aACV5D,MAAO4B,EACPqB,SAAUb,EACVqB,QAAQ,UACRI,WAAW,QANb,UAQE,yCACA,wBAAOD,UAAU,SAAjB,UACE,uBAAOL,KAAK,WAAWO,QAzER,WACrB7C,EAAM8C,aAAY,SAACC,GACjB,IAAIC,EAAI,eAAQD,GAMhB,MALsB,WAAlBC,EAAKhC,SACPgC,EAAKhC,SAAW,SAEhBgC,EAAKhC,SAAW,SAEXgC,QAkEH,sBAAML,UAAU,oBAElB,4CAEF,eAACrB,EAAA,EAAOC,IAAR,CACEC,GAAG,kBACHmB,UAAU,aACV5D,MAAO6B,EACPoB,SAAUb,EACVqB,QAAQ,UACRI,WAAW,QANb,UAQE,4CACA,wBAAOD,UAAU,SAAjB,UACE,uBAAOL,KAAK,WAAWO,QA5EP,WACtB7C,EAAM8C,aAAY,SAACC,GACjB,IAAIC,EAAI,eAAQD,GAEhB,OADAC,EAAK9B,WAAa8B,EAAK9B,UAChB8B,QAyEH,sBAAML,UAAU,oBAElB,mDAMFM,EAAU,SAACjD,GACf,MAA0BkD,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OACE,eAAC,IAAMC,SAAP,WACE,cAAC/B,EAAA,EAAOC,IAAR,CACEC,GAAG,UACHQ,SARkB,CACtBZ,QAAS,CAAEpC,gBAAiB,WAC5BqC,MAAO,CAAErC,gBAAiB,YAOtByD,QAAQ,UACRG,WAAW,QACX7D,MAvBa,CACjB2C,OAAQ,EACR4B,gBAAiB,0CACjBC,eAAgB,WAChBC,mBAAoB,UACpBC,iBAAkB,YAClBjD,aAAc,MACdJ,QAAS,OACTsD,OAAQ,OACRC,MAAO,QAeHd,QA5Bc,WAClBO,GAAUD,MA6BR,cAACS,EAAA,EAAD,UACGT,GACC,cAAC,EAAD,CACEjC,UAAWlB,EAAMkB,UACjB4B,YAAa9C,EAAM8C,YACnB9B,SAAUhB,EAAMgB,SAChByB,QAAS,CAAEoB,MAAO,aAQxBC,EAAU,SAAC9D,GACf,OACE,qBAAKwB,GAAG,UAAR,SACE,qBAAKA,GAAG,eAAR,SAAwBxB,EAAM+D,UAK9BC,EAAc,SAAChE,GACnB,IAAMiE,EAAsB,CAC1BhC,OAAQ,CACNiC,EAAG,SAEL9C,QAAS,CACP8C,EAAG,EACH7B,WAAY,CAAEC,KAAM,QAAS6B,SAAU,IAEzC5B,KAAM,CACJ2B,EAAG,QACH7B,WAAY,CAAEC,KAAM,QAAS6B,SAAU,KAIvCC,EAAiB,GAOrB,OANKpE,EAAMkB,WAAamD,OAAOC,WAAa,OAC1CF,EAAiB,CACfxC,oBAAqB,oBAKvB,qBAAKJ,GAAG,aAAazC,MAAOqF,EAA5B,SACE,cAACR,EAAA,EAAD,UACG5D,EAAMzB,WAAWgG,KAAI,SAACC,EAAM7E,GAC3B,OACE,cAAC2B,EAAA,EAAOC,IAAR,CACEoB,UAAU,cAEVX,SAAUiC,EACVzB,QAAQ,SACRC,QAAQ,UACRF,KAAK,OANP,SAQE,yBAEEI,UAAU,WACV8B,UAAW9E,EACXkD,SA/OcvE,EAgPZ0B,EAAM0E,WAhPmBnG,EAiPzByB,EAAMzB,WAhPf,SAACC,GACN,IAAMiG,EAAYjG,EAAEmG,OAAOC,WAAWH,UAAUI,MAC1CC,EAASvG,EAAWkG,GACpBjD,EAAKsD,EAAOjF,MAAMjB,cACxBH,SAASC,eAAe8C,GAAIvC,YAAc,EAC1CR,SAASC,eAAe8C,GAAIrC,OAC5Bb,EAAYwG,EAAOpF,QA4OP8B,GAAIgD,EAAK9E,KARX,UAUE,sBAAMiD,UAAU,QAAhB,SAAyB6B,EAAK3E,MAAMjB,gBACpC,uBAEE4C,GAAIgD,EAAK3E,MAAMjB,cACfmG,IAAK/E,EAAMzB,WAAWoB,GAAGqF,OACzBC,QAAQ,OACRtC,UAAU,QAJL6B,EAAK3E,MAAMjB,iBAXb4F,EAAK3E,QAPPF,GArOU,IAACrB,EAAaC,UAoW5B2G,MA9Ff,SAAalF,GACX,MAA0BkD,mBAAS,CACjCa,KAAM,iBACN7C,WAAW,EACXF,SAAU,WAHZ,mBAAOmC,EAAP,KAAcC,EAAd,KAMM+B,EAAoB,SAACpB,GACzBX,GAAS,SAACL,GACR,IAAIC,EAAI,eAAQD,GAEhB,OADAC,EAAKe,KAAOA,EACLf,MAIPzE,EAAa,GACjB,GAAI4E,EAAMjC,UAAW,CACnB,IAAIkE,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7B,WAAnBjC,EAAMnC,WACRoE,EAAKA,EAAKC,QAAQ,MAAQ,KAE5B,IAAK,IAAI1F,EAAI,EAAGA,EAAIK,EAAMzB,WAAWqB,OAAQD,KACM,IAA7CyF,EAAKC,QAAQrF,EAAMzB,WAAWoB,GAAGE,SACnCtB,EAAW6G,EAAKC,QAAQrF,EAAMzB,WAAWoB,GAAGE,QAC1CG,EAAMzB,WAAWoB,SAMvB,GAFApB,EAAU,YAAOyB,EAAMzB,YAEA,WAAnB4E,EAAMnC,SAAuB,CAG/B,IAFA,IAAIsE,GAAU,EACV5D,GAAU,EAER/B,EAAI,EACRA,EAAIpB,EAAWqB,UAAuB,IAAZ0F,IAA6B,IAAZ5D,GAC3C/B,IAE4B,MAAxBpB,EAAWoB,GAAGE,MAGiB,MAAxBtB,EAAWoB,GAAGE,QACvB6B,EAAS/B,GAHT2F,EAAS3F,EAOb,IAAI4F,EAAOhH,EAAWmD,GACtBnD,EAAWmD,GAAUnD,EAAW+G,GAChC/G,EAAW+G,GAAUC,EAIzB,IAAIC,EAAiBC,IAAMC,OAAO,IAmBlC,OAlBA7E,qBAAU,WAQR,OAPA2E,EAAeG,QAAUpH,EAEzBE,SAASmH,iBACP,UACAvH,EAAsB8G,EAAmBK,EAAeG,UAE1DlH,SAASmH,iBAAiB,QAAS9F,GAC5B,WAELrB,SAASoH,oBACP,UACAxH,EAAsB8G,EAAmBK,EAAeG,UAE1DlH,SAASoH,oBAAoB,QAAS/F,MAEvC,CAACqD,EAAMjC,UAAWiC,EAAMnC,WAGzB,eAACM,EAAA,EAAOC,IAAR,CACEoB,UAAU,MACVnB,GAAG,eACHgB,QAAS,CAAEqB,MAAO,IAClBpB,QAAS,CAAEoB,MAAO,GAClBxB,WAAY,CAAEyD,MAAO,GAAK3B,SAAU,IALtC,UAOE,cAAC,EAAD,CACEjD,UAAWiC,EAAMjC,UACjBF,SAAUmC,EAAMnC,SAChB8B,YAAaM,IAEf,cAAC,EAAD,CAASW,KAAMZ,EAAMY,OACrB,cAAC,EAAD,CACEW,WAAYS,EACZ5G,WAAYA,EACZ2C,UAAWiC,EAAMjC,gBC1XV6E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5G,MAAK,YAAkD,IAA/C6G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDRO,EAAa,CACjB,CACE1G,MAAO,IACPmF,OACE,kFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,kFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,sFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,qFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,qFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,iFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,sFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,mFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,yFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,yFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,yFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,8EACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,mFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,mFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,mFACFtF,KAAM,IAER,CACEG,MAAO,IACPmF,OACE,mFACFtF,KAAM,KAKV,IAEE,IADA,IAAI8G,EAAY,iBACP7G,EAAI,EAAGA,EAAI4G,EAAW3G,OAAQD,IACrC4G,EAAW5G,GAAGD,KAAO+G,UAAUF,EAAW5G,GAAGqF,QAAQ0B,MAAMF,GAAW,GACtED,EAAW5G,GAAGqF,OAASuB,EAAW5G,GAAGqF,OAAS,YAEhD,MAAOxG,GACPgB,QAAQD,MAAM,wCAAyCf,GAGzDmI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKtI,WAAYgI,MAEnB9H,SAASC,eAAe,SAM1BqH,M","file":"static/js/main.010874df.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nconst handleKeyPressWrapper = (setTextFunc, buttonsarr) => {\n  return (e) => {\n    try {\n      document.getElementById(\n        e.key.toUpperCase()\n      ).parentElement.children[0].style.backgroundColor = \"#e74c3c\";\n      document.getElementById(e.key.toUpperCase()).currentTime = 0;\n      let playPromise = document.getElementById(e.key.toUpperCase()).play();\n      if (playPromise !== undefined) {\n        playPromise\n          .then(() => {})\n          .catch((error) => {\n            console.log(\"error\", error);\n          });\n      }\n      let name = \"Loading\";\n      for (let i = 0; i < buttonsarr.length; i++) {\n        if (buttonsarr[i].press === e.key) {\n          name = buttonsarr[i].name;\n          break;\n        }\n      }\n      setTextFunc(name);\n    } catch {}\n  };\n};\n\nconst handleKeyUp = (e) => {\n  // for wrong keys try -> catch\n  try {\n    document.getElementById(\n      e.key.toUpperCase()\n    ).parentElement.children[0].style.backgroundColor = \"#0be881\";\n  } catch {}\n};\n\nconst dbHandleClickWrapper = (setTextFunc, buttonsarr) => {\n  return (e) => {\n    const customkey = e.target.attributes.customkey.value;\n    const button = buttonsarr[customkey];\n    const id = button.press.toUpperCase();\n    document.getElementById(id).currentTime = 0;\n    document.getElementById(id).play();\n    setTextFunc(button.name);\n  };\n};\n\nconst Dropdown = (props) => {\n  let dropdownstyle = {\n    display: \"grid\",\n    gridGap: \"10px\",\n    zIndex: 1,\n    gridTemplateRows: \"70px 1fr 1fr\",\n    gridTemplateColumns: \"1fr 70px\",\n    gridTemplateAreas: '\"header .\" \"row1 row1\" \"row2 row2\"',\n    padding: \"0 15px 15px 15px\",\n    justifySelf: \"end\",\n    alignSelf: \"start\",\n    backgroundColor: \"#1e272e\",\n    borderRadius: \"5px\",\n    color: \"#ecf0f1\",\n  };\n\n  let rowstyle = {\n    display: \"flex\",\n    justifySelf: \"center\",\n    padding: \"5px\",\n    gridColumn: \"1 / 3\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    borderRadius: \"10px\",\n    minWidth: \"100%\",\n    boxShadow: \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)\",\n  };\n\n  let row1 = { ...rowstyle };\n  row1[\"gridArea\"] = \"row1\";\n  let row2 = { ...rowstyle };\n  row2[\"gridArea\"] = \"row2\";\n  let titlestyle = {\n    gridArea: \"header\",\n    justifySelf: \"center\",\n    alignSelf: \"center\",\n  };\n\n  const keyboardToggle = () => {\n    props.setappstate((prev) => {\n      let copy = { ...prev };\n      if (copy.keyboard === \"qwerty\") {\n        copy.keyboard = \"qwertz\";\n      } else {\n        copy.keyboard = \"qwerty\";\n      }\n      return copy;\n    });\n  };\n\n  const minimizedToggle = () => {\n    props.setappstate((prev) => {\n      let copy = { ...prev };\n      copy.minimized = !copy.minimized;\n      return copy;\n    });\n  };\n\n  useEffect(() => {\n    let keyboardswitch =\n      document.getElementById(\"keyboardswitch\").children[1].children[0];\n    let minimizedswitch =\n      document.getElementById(\"minimizedswitch\").children[1].children[0];\n\n    if (props.keyboard === \"qwertz\") {\n      keyboardswitch.checked = true;\n    }\n    if (props.minimized === false) {\n      minimizedswitch.checked = true;\n    }\n  }, [props.keyboard, props.minimized]);\n\n  const dropdownVariants = {\n    hidden: { opacity: 0, x: \"30px\" },\n    open: {\n      opacity: 1,\n      x: 0,\n      transition: { type: \"ease-in-out\" },\n    },\n    exit: {\n      opacity: 0,\n      x: \"30px\",\n      transition: { type: \"ease-in-out\" },\n    },\n  };\n\n  const rowVariants = {\n    visible: { backgroundColor: \"#2d3436\" },\n    hover: { backgroundColor: \"#2c3e50\" },\n  };\n\n  return (\n    <motion.div\n      id=\"optionsdropdown\"\n      style={dropdownstyle}\n      variants={dropdownVariants}\n      initial=\"hidden\"\n      animate=\"open\"\n      exit=\"exit\"\n    >\n      <h1 style={titlestyle}>Options</h1>\n      <motion.div\n        id=\"keyboardswitch\"\n        className=\"switch-row\"\n        style={row1}\n        variants={rowVariants}\n        initial=\"visible\"\n        whileHover=\"hover\"\n      >\n        <div>QWERTY</div>\n        <label className=\"switch\">\n          <input type=\"checkbox\" onClick={keyboardToggle}></input>\n          <span className=\"slider round\"></span>\n        </label>\n        <div>QWERTZ</div>\n      </motion.div>\n      <motion.div\n        id=\"minimizedswitch\"\n        className=\"switch-row\"\n        style={row2}\n        variants={rowVariants}\n        initial=\"visible\"\n        whileHover=\"hover\"\n      >\n        <div>Minimized</div>\n        <label className=\"switch\">\n          <input type=\"checkbox\" onClick={minimizedToggle}></input>\n          <span className=\"slider round\"></span>\n        </label>\n        <div>Maximised</div>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nconst Options = (props) => {\n  const [state, setState] = useState(false); //state determines whether its clicked\n  const handleClick = () => {\n    setState(!state);\n  };\n\n  let optionsstyle = {\n    zIndex: 2,\n    backgroundImage: \"url('/FCC-Drum-Machine/gear-white.png')\",\n    backgroundSize: \"90% auto\",\n    backgroundPosition: \"50% 50%\",\n    backgroundRepeat: \"no-repeat\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    height: \"50px\",\n    width: \"50px\",\n  };\n\n  const optionsVariants = {\n    visible: { backgroundColor: \"#718093\" },\n    hover: { backgroundColor: \"#2c3e50\" },\n  };\n  return (\n    <React.Fragment>\n      <motion.div\n        id=\"options\"\n        variants={optionsVariants}\n        animate=\"visible\"\n        whileHover=\"hover\"\n        style={optionsstyle}\n        onClick={handleClick}\n      ></motion.div>\n      <AnimatePresence>\n        {state && (\n          <Dropdown\n            minimized={props.minimized}\n            setappstate={props.setappstate}\n            keyboard={props.keyboard}\n            animate={{ scale: 1.5 }}\n          />\n        )}\n      </AnimatePresence>\n    </React.Fragment>\n  );\n};\n\nconst Display = (props) => {\n  return (\n    <div id=\"display\">\n      <div id=\"display-text\">{props.text}</div>\n    </div>\n  );\n};\n\nconst DrumButtons = (props) => {\n  const drumButtonsVariants = {\n    hidden: {\n      y: \"140vh\",\n    },\n    visible: {\n      y: 0,\n      transition: { type: \"tween\", duration: 1 },\n    },\n    exit: {\n      y: \"140vh\",\n      transition: { type: \"tween\", duration: 1 },\n    },\n  };\n\n  let dbWrapperStyle = {};\n  if (!props.minimized && window.innerWidth < 1300) {\n    dbWrapperStyle = {\n      gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    };\n  }\n\n  return (\n    <div id=\"db-wrapper\" style={dbWrapperStyle}>\n      <AnimatePresence>\n        {props.buttonsarr.map((elem, i) => {\n          return (\n            <motion.div\n              className=\"drum-button\"\n              key={i}\n              variants={drumButtonsVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n            >\n              <button\n                key={elem.press}\n                className=\"drum-pad\"\n                customkey={i}\n                onClick={dbHandleClickWrapper(\n                  props.changetext,\n                  props.buttonsarr\n                )}\n                id={elem.name}\n              >\n                <span className=\"front\">{elem.press.toUpperCase()}</span>\n                <audio\n                  key={elem.press.toUpperCase()}\n                  id={elem.press.toUpperCase()}\n                  src={props.buttonsarr[i].source}\n                  preload=\"auto\"\n                  className=\"clip\"\n                ></audio>\n              </button>\n            </motion.div>\n          );\n        })}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nfunction App(props) {\n  const [state, setState] = useState({\n    text: \"Press a button\",\n    minimized: true,\n    keyboard: \"qwerty\",\n  });\n\n  const changeDisplayText = (text) => {\n    setState((prev) => {\n      let copy = { ...prev };\n      copy.text = text;\n      return copy;\n    });\n  };\n\n  let buttonsarr = [];\n  if (state.minimized) {\n    let keys = [\"q\", \"w\", \"e\", \"a\", \"s\", \"d\", \"z\", \"x\", \"c\"];\n    if (state.keyboard !== \"qwerty\") {\n      keys[keys.indexOf(\"z\")] = \"y\";\n    }\n    for (let i = 0; i < props.buttonsarr.length; i++) {\n      if (keys.indexOf(props.buttonsarr[i].press) !== -1) {\n        buttonsarr[keys.indexOf(props.buttonsarr[i].press)] =\n          props.buttonsarr[i];\n      }\n    }\n  } else {\n    buttonsarr = [...props.buttonsarr];\n\n    if (state.keyboard === \"qwerty\") {\n      let yIndex = -1;\n      let zIndex = -1;\n      for (\n        let i = 0;\n        i < buttonsarr.length && (yIndex === -1 || zIndex === -1);\n        i++\n      ) {\n        if (buttonsarr[i].press === \"y\") {\n          yIndex = i;\n          continue;\n        } else if (buttonsarr[i].press === \"z\") {\n          zIndex = i;\n          continue;\n        }\n      }\n      let zObj = buttonsarr[zIndex];\n      buttonsarr[zIndex] = buttonsarr[yIndex];\n      buttonsarr[yIndex] = zObj;\n    }\n  }\n\n  let lastButtonsarr = React.useRef([]);\n  useEffect(() => {\n    lastButtonsarr.current = buttonsarr;\n    // console.log(\"created\", lastButtonsarr.current);\n    document.addEventListener(\n      \"keydown\",\n      handleKeyPressWrapper(changeDisplayText, lastButtonsarr.current)\n    );\n    document.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      // console.log(\"removed\", lastButtonsarr.current);\n      document.removeEventListener(\n        \"keydown\",\n        handleKeyPressWrapper(changeDisplayText, lastButtonsarr.current)\n      );\n      document.removeEventListener(\"keyup\", handleKeyUp);\n    }; // eslint-disable-next-line\n  }, [state.minimized, state.keyboard]);\n\n  return (\n    <motion.div\n      className=\"App\"\n      id=\"drum-machine\"\n      initial={{ scale: 0.7 }}\n      animate={{ scale: 1 }}\n      transition={{ delay: 0.2, duration: 0.5 }}\n    >\n      <Options\n        minimized={state.minimized}\n        keyboard={state.keyboard}\n        setappstate={setState}\n      />\n      <Display text={state.text} />\n      <DrumButtons\n        changetext={changeDisplayText}\n        buttonsarr={buttonsarr}\n        minimized={state.minimized}\n      />\n    </motion.div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst buttonsArr = [\n  {\n    press: \"q\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Clap%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"w\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Clap%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"e\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20High.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"r\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20Mid.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"t\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20Low.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"z\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Cowbell.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"a\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Hihat%20Open.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"s\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Mid%20Tom.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"d\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"f\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"g\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%203.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"y\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Woop.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"x\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"c\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"v\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%203.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"b\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%204.mp3\",\n    name: \"\",\n  },\n];\n\n//get raw file from github as source and set the name of each button\ntry {\n  let nameRegEx = /.+\\/(.*)\\.mp3$/;\n  for (let i = 0; i < buttonsArr.length; i++) {\n    buttonsArr[i].name = decodeURI(buttonsArr[i].source).match(nameRegEx)[1];\n    buttonsArr[i].source = buttonsArr[i].source + \"?raw=true\";\n  }\n} catch (e) {\n  console.error(\"Error in buttonsArr, full message: \\n\", e);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App buttonsarr={buttonsArr} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}