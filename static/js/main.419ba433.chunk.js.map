{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["handleKeyPressWrapper","setTextFunc","buttonsarr","e","document","getElementById","key","toUpperCase","parentElement","children","style","backgroundColor","currentTime","playPromise","play","undefined","then","catch","error","console","log","name","i","length","press","handleKeyUp","Dropdown","props","rowstyle","display","justifySelf","padding","gridColumn","justifyContent","alignItems","borderRadius","minWidth","boxShadow","row1","row2","useEffect","keyboardswitch","minimizedswitch","keyboard","checked","minimized","rowVariants","visible","hover","motion","div","id","gridGap","zIndex","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","alignSelf","color","variants","hidden","opacity","x","open","transition","type","exit","initial","animate","gridArea","className","whileHover","onClick","setappstate","prev","copy","Options","useState","state","setState","Fragment","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","height","width","AnimatePresence","scale","Display","text","DrumButtons","drumButtonsVariants","y","duration","dbWrapperStyle","map","elem","customkey","changetext","target","attributes","value","button","src","source","preload","App","changeDisplayText","keys","indexOf","yIndex","zObj","lastButtonsarr","React","useRef","current","addEventListener","removeEventListener","delay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","buttonsArr","nameRegEx","decodeURI","match","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.419ba433.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst handleKeyPressWrapper = (setTextFunc, buttonsarr) => {\r\n  return (e) => {\r\n    try {\r\n      document.getElementById(\r\n        e.key.toUpperCase()\r\n      ).parentElement.children[0].style.backgroundColor = \"#e74c3c\";\r\n      document.getElementById(e.key.toUpperCase()).currentTime = 0;\r\n      let playPromise = document.getElementById(e.key.toUpperCase()).play();\r\n      if (playPromise !== undefined) {\r\n        playPromise\r\n          .then(() => {})\r\n          .catch((error) => {\r\n            console.log(\"error\", error);\r\n          });\r\n      }\r\n      let name = \"Loading\";\r\n      for (let i = 0; i < buttonsarr.length; i++) {\r\n        if (buttonsarr[i].press === e.key) {\r\n          name = buttonsarr[i].name;\r\n          break;\r\n        }\r\n      }\r\n      setTextFunc(name);\r\n    } catch {}\r\n  };\r\n};\r\n\r\nconst handleKeyUp = (e) => {\r\n  // for wrong keys try -> catch\r\n  try {\r\n    document.getElementById(\r\n      e.key.toUpperCase()\r\n    ).parentElement.children[0].style.backgroundColor = \"#0be881\";\r\n  } catch {}\r\n};\r\n\r\nconst dbHandleClickWrapper = (setTextFunc, buttonsarr) => {\r\n  return (e) => {\r\n    const customkey = e.target.attributes.customkey.value;\r\n    const button = buttonsarr[customkey];\r\n    const id = button.press.toUpperCase();\r\n    document.getElementById(id).currentTime = 0;\r\n    document.getElementById(id).play();\r\n    setTextFunc(button.name);\r\n  };\r\n};\r\n\r\nconst Dropdown = (props) => {\r\n  let dropdownstyle = {\r\n    display: \"grid\",\r\n    gridGap: \"10px\",\r\n    zIndex: 1,\r\n    gridTemplateRows: \"70px 1fr 1fr\",\r\n    gridTemplateColumns: \"1fr 70px\",\r\n    gridTemplateAreas: '\"header .\" \"row1 row1\" \"row2 row2\"',\r\n    padding: \"0 15px 15px 15px\",\r\n    justifySelf: \"end\",\r\n    alignSelf: \"start\",\r\n    backgroundColor: \"#1e272e\",\r\n    borderRadius: \"5px\",\r\n    color: \"#ecf0f1\",\r\n  };\r\n\r\n  let rowstyle = {\r\n    display: \"flex\",\r\n    justifySelf: \"center\",\r\n    padding: \"5px\",\r\n    gridColumn: \"1 / 3\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"10px\",\r\n    minWidth: \"100%\",\r\n    boxShadow: \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)\",\r\n  };\r\n\r\n  let row1 = { ...rowstyle };\r\n  row1[\"gridArea\"] = \"row1\";\r\n  let row2 = { ...rowstyle };\r\n  row2[\"gridArea\"] = \"row2\";\r\n  let titlestyle = {\r\n    gridArea: \"header\",\r\n    justifySelf: \"center\",\r\n    alignSelf: \"center\",\r\n  };\r\n\r\n  const keyboardToggle = () => {\r\n    props.setappstate((prev) => {\r\n      let copy = { ...prev };\r\n      if (copy.keyboard === \"qwerty\") {\r\n        copy.keyboard = \"qwertz\";\r\n      } else {\r\n        copy.keyboard = \"qwerty\";\r\n      }\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  const minimizedToggle = () => {\r\n    props.setappstate((prev) => {\r\n      let copy = { ...prev };\r\n      copy.minimized = !copy.minimized;\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let keyboardswitch =\r\n      document.getElementById(\"keyboardswitch\").children[1].children[0];\r\n    let minimizedswitch =\r\n      document.getElementById(\"minimizedswitch\").children[1].children[0];\r\n\r\n    if (props.keyboard === \"qwertz\") {\r\n      keyboardswitch.checked = true;\r\n    }\r\n    if (props.minimized === false) {\r\n      minimizedswitch.checked = true;\r\n    }\r\n  }, [props.keyboard, props.minimized]);\r\n\r\n  const dropdownVariants = {\r\n    hidden: { opacity: 0, x: \"30px\" },\r\n    open: {\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: { type: \"ease-in-out\" },\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      x: \"30px\",\r\n      transition: { type: \"ease-in-out\" },\r\n    },\r\n  };\r\n\r\n  const rowVariants = {\r\n    visible: { backgroundColor: \"#2d3436\" },\r\n    hover: { backgroundColor: \"#2c3e50\" },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      id=\"optionsdropdown\"\r\n      style={dropdownstyle}\r\n      variants={dropdownVariants}\r\n      initial=\"hidden\"\r\n      animate=\"open\"\r\n      exit=\"exit\"\r\n    >\r\n      <h1 style={titlestyle}>Options</h1>\r\n      <motion.div\r\n        id=\"keyboardswitch\"\r\n        className=\"switch-row\"\r\n        style={row1}\r\n        variants={rowVariants}\r\n        initial=\"visible\"\r\n        whileHover=\"hover\"\r\n      >\r\n        <div>QWERTY</div>\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" onClick={keyboardToggle}></input>\r\n          <span className=\"slider round\"></span>\r\n        </label>\r\n        <div>QWERTZ</div>\r\n      </motion.div>\r\n      <motion.div\r\n        id=\"minimizedswitch\"\r\n        className=\"switch-row\"\r\n        style={row2}\r\n        variants={rowVariants}\r\n        initial=\"visible\"\r\n        whileHover=\"hover\"\r\n      >\r\n        <div>Minimized</div>\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" onClick={minimizedToggle}></input>\r\n          <span className=\"slider round\"></span>\r\n        </label>\r\n        <div>Maximised</div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst Options = (props) => {\r\n  const [state, setState] = useState(false); //state determines whether its clicked\r\n  const handleClick = () => {\r\n    setState(!state);\r\n  };\r\n\r\n  let optionsstyle = {\r\n    zIndex: 2,\r\n    backgroundImage: \"url('/FCC-Drum-Machine/gear-white.png')\",\r\n    backgroundSize: \"90% auto\",\r\n    backgroundPosition: \"50% 50%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    borderRadius: \"5px\",\r\n    padding: \"10px\",\r\n    height: \"50px\",\r\n    width: \"50px\",\r\n  };\r\n\r\n  const optionsVariants = {\r\n    visible: { backgroundColor: \"#718093\" },\r\n    hover: { backgroundColor: \"#2c3e50\" },\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <motion.div\r\n        id=\"options\"\r\n        variants={optionsVariants}\r\n        animate=\"visible\"\r\n        whileHover=\"hover\"\r\n        style={optionsstyle}\r\n        onClick={handleClick}\r\n      ></motion.div>\r\n      <AnimatePresence>\r\n        {state && (\r\n          <Dropdown\r\n            minimized={props.minimized}\r\n            setappstate={props.setappstate}\r\n            keyboard={props.keyboard}\r\n            animate={{ scale: 1.5 }}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Display = (props) => {\r\n  return (\r\n    <div id=\"display\">\r\n      <div id=\"display-text\">{props.text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrumButtons = (props) => {\r\n  const drumButtonsVariants = {\r\n    hidden: {\r\n      y: \"140vh\",\r\n    },\r\n    visible: {\r\n      y: 0,\r\n      transition: { type: \"tween\", duration: 1 },\r\n    },\r\n    exit: {\r\n      y: \"140vh\",\r\n      transition: { type: \"tween\", duration: 1 },\r\n    },\r\n  };\r\n\r\n  let dbWrapperStyle = {};\r\n  if (!props.minimized) {\r\n    dbWrapperStyle = {\r\n      gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div id=\"db-wrapper\" style={dbWrapperStyle}>\r\n      <AnimatePresence>\r\n        {props.buttonsarr.map((elem, i) => {\r\n          return (\r\n            <motion.div\r\n              className=\"drum-button\"\r\n              key={i}\r\n              variants={drumButtonsVariants}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              exit=\"exit\"\r\n            >\r\n              <button\r\n                key={elem.press}\r\n                className=\"drum-pad\"\r\n                customkey={i}\r\n                onClick={dbHandleClickWrapper(\r\n                  props.changetext,\r\n                  props.buttonsarr\r\n                )}\r\n                id={elem.name}\r\n              >\r\n                <span className=\"front\">{elem.press.toUpperCase()}</span>\r\n                <audio\r\n                  key={elem.press.toUpperCase()}\r\n                  id={elem.press.toUpperCase()}\r\n                  src={props.buttonsarr[i].source}\r\n                  preload=\"auto\"\r\n                  className=\"clip\"\r\n                ></audio>\r\n              </button>\r\n            </motion.div>\r\n          );\r\n        })}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App(props) {\r\n  const [state, setState] = useState({\r\n    text: \"Press a button\",\r\n    minimized: true,\r\n    keyboard: \"qwerty\",\r\n  });\r\n\r\n  const changeDisplayText = (text) => {\r\n    setState((prev) => {\r\n      let copy = { ...prev };\r\n      copy.text = text;\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  let buttonsarr = [];\r\n  if (state.minimized) {\r\n    let keys = [\"q\", \"w\", \"e\", \"a\", \"s\", \"d\", \"z\", \"x\", \"c\"];\r\n    if (state.keyboard !== \"qwerty\") {\r\n      keys[keys.indexOf(\"z\")] = \"y\";\r\n    }\r\n    for (let i = 0; i < props.buttonsarr.length; i++) {\r\n      if (keys.indexOf(props.buttonsarr[i].press) !== -1) {\r\n        buttonsarr[keys.indexOf(props.buttonsarr[i].press)] =\r\n          props.buttonsarr[i];\r\n      }\r\n    }\r\n  } else {\r\n    buttonsarr = [...props.buttonsarr];\r\n\r\n    if (state.keyboard === \"qwerty\") {\r\n      let yIndex = -1;\r\n      let zIndex = -1;\r\n      for (\r\n        let i = 0;\r\n        i < buttonsarr.length && (yIndex === -1 || zIndex === -1);\r\n        i++\r\n      ) {\r\n        if (buttonsarr[i].press === \"y\") {\r\n          yIndex = i;\r\n          continue;\r\n        } else if (buttonsarr[i].press === \"z\") {\r\n          zIndex = i;\r\n          continue;\r\n        }\r\n      }\r\n      let zObj = buttonsarr[zIndex];\r\n      buttonsarr[zIndex] = buttonsarr[yIndex];\r\n      buttonsarr[yIndex] = zObj;\r\n    }\r\n  }\r\n\r\n  let lastButtonsarr = React.useRef([]);\r\n  useEffect(() => {\r\n    lastButtonsarr.current = buttonsarr;\r\n    // console.log(\"created\", lastButtonsarr.current);\r\n    document.addEventListener(\r\n      \"keydown\",\r\n      handleKeyPressWrapper(changeDisplayText, lastButtonsarr.current)\r\n    );\r\n    document.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => {\r\n      // console.log(\"removed\", lastButtonsarr.current);\r\n      document.removeEventListener(\r\n        \"keydown\",\r\n        handleKeyPressWrapper(changeDisplayText, lastButtonsarr.current)\r\n      );\r\n      document.removeEventListener(\"keyup\", handleKeyUp);\r\n    }; // eslint-disable-next-line\r\n  }, [state.minimized, state.keyboard]);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"App\"\r\n      id=\"drum-machine\"\r\n      initial={{ scale: 0.7 }}\r\n      animate={{ scale: 1 }}\r\n      transition={{ delay: 0.2, duration: 0.5 }}\r\n    >\r\n      <Options\r\n        minimized={state.minimized}\r\n        keyboard={state.keyboard}\r\n        setappstate={setState}\r\n      />\r\n      <Display text={state.text} />\r\n      <DrumButtons\r\n        changetext={changeDisplayText}\r\n        buttonsarr={buttonsarr}\r\n        minimized={state.minimized}\r\n      />\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst buttonsArr = [\n  {\n    press: \"q\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Clap%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"w\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Clap%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"e\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20High.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"r\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20Mid.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"t\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Conga%20Low.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"z\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Cowbell.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"a\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Hihat%20Open.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"s\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Mid%20Tom.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"d\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"f\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"g\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Pop%20Chord%203.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"y\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Woop.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"x\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%201.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"c\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%202.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"v\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%203.mp3\",\n    name: \"\",\n  },\n  {\n    press: \"b\",\n    source:\n      \"https://github.com/Julian-Sz/FCC-Drum-Machine/blob/main/src/sounds/Snare%204.mp3\",\n    name: \"\",\n  },\n];\n\n//get raw file from github as source and set the name of each button\ntry {\n  let nameRegEx = /.+\\/(.*)\\.mp3$/;\n  for (let i = 0; i < buttonsArr.length; i++) {\n    buttonsArr[i].name = decodeURI(buttonsArr[i].source).match(nameRegEx)[1];\n    buttonsArr[i].source = buttonsArr[i].source + \"?raw=true\";\n  }\n} catch (e) {\n  console.error(\"Error in buttonsArr, full message: \\n\", e);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App buttonsarr={buttonsArr} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}